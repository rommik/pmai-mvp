# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# CMake
CMakeFiles/
CMakeCache.txt
CMakeScripts/
CTestTestfile.cmake
cmake_install.cmake
install_manifest.txt
# Makefile
*.cmake
*.vcxproj
*.vcxproj.filters

# Poetry
#   According to pypa/poetry#1915, it is recommended to include poetry.lock in version control.
#   However, in case of collaboration, if having poetry.lock present causes conflicts, then
#   it is recommended to include it in .gitignore.
#poetry.lock

# Pylance (https://github.com/microsoft/pylance-release)
#   Pylance is an optional plugin for Visual Studio Code that provides enhanced and
#   additional features to the default Python extension for VS Code. Because Pylance
#   depends on typeshed which is a large library and changes frequently, you may want
#   to ignore these files in your version control system.
.pylance/

# Rope project settings
.ropeproject

# Sublime Text
#   Cache files for Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Vim
#   Swap
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-v][a-z]
[._]sw[a-p]
#   Session
Session.vim
#   Temporary
.netrwhist
*~

# OS X
#   General
.DS_Store
.AppleDouble
.LSOverride
#   Icon must end with two \r
Icon
#   Thumbnails
._*
#   Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows
#   Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
#   Dump file
*.stackdump
#   Folder config file
[Dd]esktop.ini
#   Recycle Bin used on file shares
$RECYCLE.BIN/

# Linux
*~

# KDE directory preferences
.directory

# Python notebooks
.ipynb_checkpoints/
